global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'homelab-monitoring'
    environment: 'production'

# Load alerting rules
rule_files:
  - "rules/*.yml"

# Alertmanager configuration (optional - add if you set up Alertmanager)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter - Host metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'homelab-server'

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'homelab-server'

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']

  # ntopng metrics (if exporter enabled)
  - job_name: 'ntopng'
    static_configs:
      - targets: ['ntopng:3001']
    metrics_path: /lua/rest/v2/get/system/stats.lua
    scrape_interval: 30s

# Remote write configuration for OpenTelemetry
# Receives metrics from OTEL Collector
remote_write:
  - url: http://localhost:9090/api/v1/write
    queue_config:
      capacity: 10000
      max_shards: 5
      min_shards: 1
      max_samples_per_send: 5000
      batch_send_deadline: 5s
