receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Collect host metrics
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
      disk:
      filesystem:
      load:
      memory:
      network:
      paging:
      processes:

  # Scrape Prometheus endpoints
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 15s
          static_configs:
            - targets: ['localhost:8888']

  # Docker stats receiver
  docker_stats:
    endpoint: unix:///var/run/docker.sock
    collection_interval: 30s
    timeout: 10s
    api_version: "1.25"
    metrics:
      container.memory.usage.limit:
        enabled: true
      container.memory.percent:
        enabled: true
      container.cpu.usage.total:
        enabled: true

processors:
  # Batch metrics, traces, and logs to reduce API calls
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Add resource detection (cloud, host, os info)
  resourcedetection:
    detectors: [env, system, docker]
    timeout: 5s
    override: false

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_percentage: 75
    spike_limit_percentage: 15

  # Add attributes to all telemetry
  attributes:
    actions:
      - key: environment
        value: homelab
        action: insert
      - key: collector.name
        value: otel-collector
        action: insert

exporters:
  # Export metrics to Prometheus
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: otel
    const_labels:
      environment: homelab

  # Export to Prometheus via remote write
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    tls:
      insecure: true

  # Debug exporter for debugging (replaces deprecated logging exporter)
  debug:
    verbosity: normal
    sampling_initial: 5
    sampling_thereafter: 200

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    metrics:
      receivers: [otlp, hostmetrics, prometheus, docker_stats]
      processors: [memory_limiter, resourcedetection, attributes, batch]
      exporters: [prometheus, prometheusremotewrite, debug]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [debug]

  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      readers:
        - pull:
            exporter:
              prometheus:
                host: "0.0.0.0"
                port: 8888
